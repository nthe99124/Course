@using CourseProject.Common.Constant
@using CourseProject.Shared.Header
@inject NavigationManager _navigationManager;
@inherits AuthorBaseComponent

@* <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.3.1/css/all.min.css"> *@
@* <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.3.1/css/fontawesome.min.css"> *@
<link rel="stylesheet" href="https://4user.net/assets/backend/css/font-awesome-icon-picker/fontawesome-iconpicker.min.css" >

<link rel="stylesheet" href="css/Lib/tagify.css">
<link rel="stylesheet" href="css/Lib/jquery.webui-popover.min.css">
@* <link rel="stylesheet" href="css/Lib/slick.css">
<link rel="stylesheet" href="css/Lib/slick-theme.css"> *@
<link rel="stylesheet" href="css/Lib/toastr.css">
<script src="js/site.js"></script>
@if (role == RoleConstant.Admin)
{
    <HeaderAdmin></HeaderAdmin>
}
else if (role == RoleConstant.Teacher)
{
    <HeaderTeacher></HeaderTeacher>
}
else
{
    <HeaderUser></HeaderUser>
}
<Toasts class="p-3" Messages="messages" Placement="toastsPlacement" />

<script src="js/Lib/modernizr-3.5.0.min.js"></script>
<script src="js/Lib/popper.min.js"></script>
<script src="js/Lib/bootstrap.min.js"></script>
<script src="js/Lib/jquery.webui-popover.min.js"></script>
<script src="js/Common/main.js"></script>
<script src="js/Lib/toastr.min.js"></script>
<script src="js/Lib/jquery.form.min.js"></script>
<script src="js/Lib/jQuery.tagify.js"></script>
@code {
    private string role { get; set; } = RoleConstant.Customer;
    protected override async Task HandleAfterRenderAsync(bool firstRender)
    {
        var currentUri = _navigationManager.Uri;
        var segments = currentUri.Split('/').ToList();
        if (segments.Contains("teacher"))
        {
            // gồm dẫn teacher thì là sang phần teacher
            role = RoleConstant.Teacher;
            StateHasChanged();
        }
        else if (segments.Contains("admin"))
        {
            role = RoleConstant.Admin;
            StateHasChanged();
        }
        else
        {
            role = RoleConstant.Customer;
            StateHasChanged();
        }
    }
}
