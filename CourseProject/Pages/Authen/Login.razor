@page "/login"
@using BlazorBootstrap
@using CourseProject.Common.Constant
@using CourseProject.Model.ViewModel.Account
@using CourseProject.Services
@using System.Text.Json
@using CourseProject.Shared.ComponentBase

@inject IAccountService _accountService;
@inherits BaseComponentCustom
<Toasts class="p-3" Messages="messages" Placement="toastsPlacement" />
<div class="category-course-list-area">
    <div class="container">
        <div class="row mb-5 mt-3">
            <div class="col-md-12 text-center">
                <h1 class="fw-700">Đăng nhập</h1>
                <p class="text-14px">Cung cấp thông tin đăng nhập hợp lệ của bạn</p>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6 d-none d-lg-block text-center">
                <img class="mt-4" width="60%" src="https://4user.net/uploads/system/sign_up.png">
            </div>
            <div class="col-lg-6">
                <div class="sign-up-form">

                    <div id="sign_up">
                        <div class="form-group">
                            <label for="login-email">Email</label>
                            <div class="input-group">
                                <span class="input-group-text bg-white" for="email"><i class="fas fa-envelope"></i></span>
                                <input type="email" data-field="email" class="form-control" placeholder="Email" data-rule="required|email" data-name="Email" @bind="loginViewModel.Email">
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="login-password">Mật khẩu</label>
                            <div class="input-group">
                                <span class="input-group-text bg-white" for="password"><i class="fas fa-key"></i></span>
                                <input type="password" data-field="password" class="form-control" placeholder="Mật khẩu" data-rule="required|password" data-name="Mật khẩu" @bind="loginViewModel.Password">
                            </div>
                            <a class="text-muted text-12px fw-500 float-end" href="https://4user.net/login/forgot_password_request">Quên mật khẩu?</a>
                        </div>


                        <div class="form-group" @onclick="(() => LoginAction(loginViewModel))">
                            <button type="submit" class="btn red radius-5 mt-4 w-100">Đăng nhập</button>
                        </div>

                        <div class="form-group mt-4 mb-0 text-center">
                            Chưa có tài khoản?
                            <a class="text-15px fw-700" @onclick='() => NavigateToUrl("/register")'>Đăng ký</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    private LoginViewModel loginViewModel { get; set; } = new LoginViewModel();

    private async Task LoginAction(LoginViewModel loginViewModel)
    {
        var messError = await InvokeAsync<string>("validateForm", "sign_up");
        if (string.IsNullOrEmpty(messError))
        {
            var res = await _accountService.Login(loginViewModel);
            if (res != null && res.IsSuccess && res.Data != null)
            {
                // Gọi hàm JavaScript để ghi token vào sessionStorage
                await SetSessionStorage("token", res.Data.Token);
                var userInfor = new UserInforGeneric
                    {
                        Email = loginViewModel.Email,
                        ImgAvatar = res.Data.ImgAvatar,
                        FullName = res.Data.FullName,
                        Token = res.Data.Token,
                    };
                var userInforJson = JsonSerializer.Serialize(userInfor);
                await SetSessionStorage("userInfor", userInforJson);
                // lưu quyền trên session chỉ phục vụ hiển thị màn hình thôi, các nghiệp vụ check quyền dưới BE hết
                // await ShowToast("Đăng nhập thành công");
                await Task.Delay(2000);
                if (res.Data.RoleList.Contains(RoleConstant.Admin) || res.Data.RoleList.Contains(RoleConstant.Teacher))
                {
                    // là nhân viên hoặc admin thì bay luôn sang admin
                    NavigateToUrl($"/admin/course", true);
                }
                else
                {
                    NavigateToUrl($"/home", true);
                }
            }
            else
            {
                ShowErrorMessage(res.Message);
            }
        }
        else
        {
            ShowErrorMessage(messError);
        }
    }
}
